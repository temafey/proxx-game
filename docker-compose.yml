version: "3.7"

services:
  app:
    container_name: ${APP_COMPOSE_PROJECT_NAME}_php
    image: docker.local/${CI_PROJECT_PATH}/php${PHP_VER}-cli-dev:${CI_COMMIT_REF_SLUG}
    networks:
      - ${DOCKER_NETWORK_NAME}
    env_file:
      - .env
    user: 1000:1000
    volumes:
      - ~/.composer/cache/:/.composer_cache/:rw
      - ./:/app:rw
    working_dir: /app
    restart: on-failure
    ports:
      - 9501:9501
      - 9200:9200

  # It is only for local environment to start without conflicts with monoliths
  nginx:
    container_name: ${APP_COMPOSE_PROJECT_NAME}_nginx
    image: nginx:alpine
    networks:
      - ${DOCKER_NETWORK_NAME}
    working_dir: /app
    volumes:
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./:/app
    ports:
      - 127.0.0.10:80:80
      - 127.0.0.10:8080:8080

  php-fpm:
    container_name: ${APP_COMPOSE_PROJECT_NAME}_php_fpm
    build:
      context: ./.docker/php${PHP_VER}-fpm-dev
      args:
        PHP_VER: ${PHP_VER}
    networks:
      - ${DOCKER_NETWORK_NAME}
    env_file:
      - .env
    user: 1000:1000
    ports:
      - "9000:9003"
    environment:
      PHP_IDE_CONFIG: serverName=docker
    volumes:
      - ~/.composer/cache/:/.composer_cache/:rw
      - ./:/app:rw
    working_dir: /app

  postgres:
    container_name: postgres
    image: postgres:alpine
    networks:
      - ${DOCKER_NETWORK_NAME}
    env_file:
      - .env
    volumes:
      - postgres_db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    user: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 3

networks:
  micro-game:
    external: true
    name: ${DOCKER_NETWORK_NAME}
    driver: bridge

volumes:
  postgres_db:
